************** Introduction
we will learn how to add update remove objects

we will also use linqpad

in DbContext

we have change tracker

that tracks changes in objects

when you add object
it marks it as added

and the same is marked for modified

for remove the change tracker sets it to deleted

all of these changes are in memory

when we call save changes method

then they are transacted to db
once this is done

change tracker mark agains them as unsaved


****************** Adding object

let see how to add a new object using entity framework

var context = new PlutoDbContext();

            var course = new Cours
            {
                Title = "New course",
                Description = "new description",
                Price = 19,
                Level = 1,
                Author = new Author { AuthorID = 1, Name = "new author" }
            };
            context.Courses.Add(course);
            context.SaveChanges();

now there is slight probem with this code

now if we take a look at the data base we will see

there are two authors with same naem


so since we are creating a new object here
dbContext sees this as new object and doesn't look for the 

wpx application

we will use exising object

var authors = context.Authors.ToList()
var author = authors.Authors.Single( a => a.Id == 1)
var course = new Cours
            {
                Title = "New course",
                Description = "new description",
                Price = 19,
                Level = 1,
                Author = author
            };

so here we passed an existing object

**************** for foregn key property

var course = new Cours
            {
                Title = "New course",
                Description = "new description",
                Price = 19,
                Level = 1,
                Authorid = 1
            };

*********************** updating objects

instead of using single method we can use find method

one thing you need to take care while updating is

first you need to load them in your context

this is because of the change tracker  

****************** Removing Objects

will see two 

one with cascade delet and another without cascade 

when we have cascade delelte set it will delete its related records also

var author = context.Authors.Find(2);
context.Authors.Remove(author);

context.Savechanges

always look at last exception of the chain

so in this case 

we have to eager load author and its courses

find cannot be used after include so i am changint this to a single

vara author = context.Authors.Include(a => a.Courses).Single( a => a.id == 1);
context.Courses.RemoveRange(author.Courses);
context.Authors.Remove(author)

************** working with change tracker
add, update, delete
var entries = context.changeTracker.Entries();

foreach ( var entry in entries){
    console.Writeline(entry.State)
}

another property entity

you have edited the property and you want to reload it

